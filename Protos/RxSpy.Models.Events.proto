syntax = "proto3";

package RxSpy;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "RxSpy.Protobuf.Events";
option optimize_for = SPEED;

message MethodInfo {
  string declaringType = 1;
  string name = 2;
  string namespace = 3;
  string signature = 4;
}

message CallSite {
  string file = 1;
  int32 ilOffset = 2;
  int32 line = 3;
  MethodInfo method = 4;
}

message TypeInfo {
  string name = 1;
  string namespace = 2;
}

message ConnectedEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 operatorId = 3;
}

message DisconnectedEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 connectionId = 3;
}

message OnCompletedEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 operatorId = 3;
}

message OnErrorEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  TypeInfo errorType = 3;
  string message = 4;
  string stackTrace = 5;
  int64 operatorId = 6;
}

message OnNextEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 operatorId = 3;
  string valueType = 4;
  string value = 5;
  int32 thread = 6;
}

message SubscribeEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 childId = 3;
  int64 parentId = 4;
}

message TagOperatorEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 operatorId = 3;
  string tag = 4;
}

message UnsubscribeEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 subscriptionId = 3;
}

message OperatorCreatedEvent {
  int64 eventId = 1;
  google.protobuf.Timestamp eventTime = 2;
  int64 id = 3;
  string name = 4;
  CallSite callSite = 5;
  MethodInfo operatorMethod = 6;
}

message OperatorInfo {
  string Name = 1;
  int64 Id = 2;
  CallSite CallSite = 3;
  MethodInfo OperatorMethod = 4;
  bool IsAnonymous = 5;
}

message RxSpyEvents {
  oneof Event {
    OperatorCreatedEvent operatorCreated = 1;
    OperatorInfo operatorInfo = 2;
    OperatorInfo operatorCollected = 3;
    SubscribeEvent subscribe = 4;
    UnsubscribeEvent unsubscribe = 5;
    OnNextEvent onNext = 6;
    OnErrorEvent onError = 7;
    OnCompletedEvent onCompleted = 8;
    TagOperatorEvent tagOperator = 9;
    ConnectedEvent connected = 10;
    DisconnectedEvent disconnected = 11;
  }
}

service RxSpyService {
  rpc GetEvents(google.protobuf.Empty) returns (stream RxSpyEvents);
}